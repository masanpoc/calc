{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","display","setDisplay","item","setItem","number","setNumber","numberList","setNumberList","operatorList","setOperatorList","result","setResult","useEffect","console","log","length","calculate","multiply","num1","num2","divide","sum","substract","addNumber","el","includes","prevState","addOperator","op","pop","Number","join","shift","indexOf","index","calculation","splice","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAuTeA,MAlTf,WAAgB,IAAD,EAEiBC,mBAAS,IAF1B,mBAENC,EAFM,KAEGC,EAFH,OAGWF,mBAAS,CAAC,IAHrB,mBAGNG,EAHM,KAGAC,EAHA,OAIeJ,mBAAS,IAJxB,mBAINK,EAJM,KAIEC,EAJF,OAKuBN,mBAAS,IALhC,mBAKNO,EALM,KAKMC,EALN,OAM2BR,mBAAS,IANpC,mBAMNS,EANM,KAMQC,EANR,OAOeV,oBAAS,GAPxB,mBAONW,EAPM,KAOEC,EAPF,KA6FbC,qBAAU,WACRC,QAAQC,IAAI,SAAUV,GACnBA,EAAOW,OAAO,GACfZ,EAAQC,KAET,CAACA,IAEJQ,qBAAU,WACRC,QAAQC,IAAI,aAAcR,KACzB,CAACA,IAEJM,qBAAU,WACRC,QAAQC,IAAI,eAAgBN,KAC3B,CAACA,IAEJI,qBAAU,WACLF,GACDM,IAEFH,QAAQC,IAAIJ,KACX,CAACA,IAEJ,IAAMO,EAAW,SAACC,EAAMC,GACtB,OAAOD,EAAKC,GAERC,EAAS,SAACF,EAAMC,GACpB,OAAOD,EAAKC,GAERE,EAAM,SAACH,EAAMC,GACjB,OAAOD,EAAKC,GAERG,EAAY,SAACJ,EAAMC,GACvB,OAAOD,EAAKC,GAYRI,EAAY,SAACC,GAGT,MAALA,GAAYpB,EAAOqB,SAAS,KAC7BZ,QAAQC,IAAI,iBAGRd,EAAQyB,SAAS,OACnBpB,GAAU,SAACqB,GAAD,4BAAmBA,GAAnB,CAA8BF,OACxCvB,GAAW,SAACyB,GAAD,4BAAmBA,GAAnB,CAA8BF,QAExCxB,EAAQyB,SAAS,OAElBxB,EAAW,CAACuB,IACZnB,GAAU,SAACqB,GAAD,4BAAmBA,GAAnB,CAA8BF,OACxCjB,EAAc,OAKdoB,EAAc,SAACC,GAkBnB,GAjBA3B,GAAW,SAACyB,GAAD,4BAAmBA,GAAnB,CAA8BE,OAEnB,IAAlBxB,EAAOW,SACTP,EAAaqB,MAEbpB,GAAgB,SAACiB,GAAD,4BAAmBA,GAAnB,CAA8BE,QAG7CxB,EAAOW,OAAO,IAEfN,GAAgB,SAACiB,GAAD,4BAAmBA,GAAnB,CAA8BE,OAE9CrB,GAAc,SAAAmB,GAAS,4BAAMA,GAAN,CAAiBI,OAAO1B,EAAO2B,KAAK,UAE3D1B,EAAU,KAGTL,EAAQyB,SAAS,KAClB,KAAMzB,EAAQe,OAAO,GACnBf,EAAQgC,QAGZ7B,EAAQyB,IAUJZ,EAAY,WAKhB,IAJAL,GAAU,GACVV,GAAW,SAACyB,GAAD,4BAAmBA,GAAnB,CAA8B,SACzCb,QAAQC,IAAI,eAENN,EAAaiB,SAAS,SAAQjB,EAAaiB,SAAS,MACxD,GAAGjB,EAAaiB,SAAS,SAAQjB,EAAaiB,SAAS,KACrD,GAAGjB,EAAayB,QAAQ,QAAKzB,EAAayB,QAAQ,KAAK,CAErDpB,QAAQC,IAAI,eACZ,IAAIoB,EAAQ1B,EAAayB,QAAQ,QAC7BE,EAAclB,EAASX,EAAW4B,GAAQ5B,EAAW4B,EAAM,IAC/D1B,EAAa4B,OAAOF,EAAO,GAC3B5B,EAAW8B,OAAOF,EAAO,EAAGC,OAEzB,CAEHtB,QAAQC,IAAI,YACZ,IAAIoB,EAAQ1B,EAAayB,QAAQ,KAC7BE,EAAcf,EAAOd,EAAW4B,GAAQ5B,EAAW4B,EAAM,IAC7D1B,EAAa4B,OAAOF,EAAO,GAC3B5B,EAAW8B,OAAOF,EAAO,EAAGC,QAG3B,GAAG3B,EAAaiB,SAAS,QAAM,CAClCZ,QAAQC,IAAI,eACZ,IAAIoB,EAAQ1B,EAAayB,QAAQ,QAC7BE,EAAclB,EAASX,EAAW4B,GAAQ5B,EAAW4B,EAAM,IAC/D1B,EAAa4B,OAAOF,EAAO,GAC3B5B,EAAW8B,OAAOF,EAAO,EAAGC,OAEzB,CACHtB,QAAQC,IAAI,YACZ,IAAIoB,EAAQ1B,EAAayB,QAAQ,KAC7BE,EAAcf,EAAOd,EAAW4B,GAAQ5B,EAAW4B,EAAM,IAC7D1B,EAAa4B,OAAOF,EAAO,GAC3B5B,EAAW8B,OAAOF,EAAO,EAAGC,GAKhC,IAFAtB,QAAQC,IAAI,aAAcR,EAAY,eAAgBE,EAAaO,QAE7DP,EAAaO,OAAO,GACxB,GAAGP,EAAaiB,SAAS,MAAQjB,EAAaiB,SAAS,KACrD,GAAGjB,EAAayB,QAAQ,KAAKzB,EAAayB,QAAQ,KAAK,CAErDpB,QAAQC,IAAI,WACZ,IAAIoB,EAAQ1B,EAAayB,QAAQ,KAC7BE,EAAcd,EAAIf,EAAW4B,GAAQ5B,EAAW4B,EAAM,IAC1D1B,EAAa4B,OAAOF,EAAO,GAC3B5B,EAAW8B,OAAOF,EAAO,EAAGC,OAEzB,CAEHtB,QAAQC,IAAI,gBACZ,IAAIoB,EAAQ1B,EAAayB,QAAQ,KAC7BE,EAAcb,EAAUhB,EAAW4B,GAAQ5B,EAAW4B,EAAM,IAChE1B,EAAa4B,OAAOF,EAAO,GAC3B5B,EAAW8B,OAAOF,EAAO,EAAGC,GAC5BtB,QAAQC,IAAIqB,QAGX,GAAG3B,EAAaiB,SAAS,KAAM,CAElC,IAAIS,EAAQ1B,EAAayB,QAAQ,KAE7BE,EAAcd,EAAIf,EAAW4B,GAAQ5B,EAAW4B,EAAM,IACzD1B,EAAa4B,OAAOF,EAAO,GAC5B5B,EAAW8B,OAAOF,EAAO,EAAGC,GAC5BtB,QAAQC,IAAI,UAAWR,EAAYE,EAAaO,YAE7C,CACHF,QAAQC,IAAI,gBACZ,IAAIoB,EAAQ1B,EAAayB,QAAQ,KAC7BE,EAAcb,EAAUhB,EAAW4B,GAAQ5B,EAAW4B,EAAM,IAChE1B,EAAa4B,OAAOF,EAAO,GAC3B5B,EAAW8B,OAAOF,EAAO,EAAGC,GAGP,IAAtB3B,EAAaO,SACdd,GAAW,SAACyB,GAAD,4BAAmBA,GAAnB,CAA8BpB,OACzCH,EAAQG,KAKZ,OACE,qBAAK+B,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAMA,UAAU,YAAhB,SAA6BrC,IAC7B,sBAAMqC,UAAU,UAAhB,SAA2BnC,OAE7B,sBAAKmC,UAAU,eAAf,UACE,wBAAQC,QA3JF,WACZjC,EAAU,IACVI,EAAgB,IAChBF,EAAc,IACdI,GAAU,GACVV,EAAW,IACXE,EAAQ,IAqJsBkC,UAAU,KAAlC,gBACA,wBAAQC,QAAS,kBAAIX,EAAY,MAAMU,UAAU,OAAjD,eACA,wBAAQC,QAAS,kBAAIX,EAAY,SAAMU,UAAU,OAAjD,eACA,wBAAQC,QAAS,kBAAIf,EAAU,IAAIc,UAAU,OAA7C,eACA,wBAAQC,QAAS,kBAAIf,EAAU,IAAIc,UAAU,OAA7C,eACA,wBAAQC,QAAS,kBAAIf,EAAU,IAAIc,UAAU,OAA7C,eACA,wBAAQC,QAAS,kBAAIX,EAAY,MAAMU,UAAU,OAAjD,eACA,wBAAQC,QAAS,kBAAIf,EAAU,IAAIc,UAAU,OAA7C,eACA,wBAAQC,QAAS,kBAAIf,EAAU,IAAIc,UAAU,OAA7C,eACA,wBAAQC,QAAS,kBAAIf,EAAU,IAAIc,UAAU,OAA7C,eACA,wBAAQC,QAAS,kBAAIX,EAAY,MAAMU,UAAU,QAAjD,eACA,wBAAQC,QAAS,kBAAIf,EAAU,IAAIc,UAAU,QAA7C,eACA,wBAAQC,QAAS,kBAAIf,EAAU,IAAIc,UAAU,QAA7C,eACA,wBAAQC,QAAS,kBAAIf,EAAU,IAAIc,UAAU,QAA7C,eACA,wBAAQC,QAjHS,WACvBjC,EAAU,IACVM,GAAU,GACVJ,GAAc,SAAAmB,GAAS,4BAAMA,GAAN,CAAiBI,OAAO1B,EAAO2B,KAAK,WA8GlBM,UAAU,KAA7C,eACA,wBAAQC,QAAS,kBAAIf,EAAU,IAAIc,UAAU,QAA7C,eACA,wBAAQC,QAAS,kBAAIf,EAAU,MAAMc,UAAU,QAA/C,wBCpSKE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c6cf2fb9.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect, useCallback } from 'react';\n\n\n\nfunction App() {\n  \n  const [display, setDisplay] = useState([]);\n  const [item, setItem] = useState([0]);\n  const [number, setNumber] = useState([]);\n  const [numberList, setNumberList] = useState([]);\n  const [operatorList, setOperatorList] = useState([]);\n  const [result, setResult] = useState(false);\n\n  \n  // const handleUserKeyPress = (event) => {\n  //   console.log('press')\n  //   const { key, keyCode } = event;\n\n  //   if (keyCode === 8 || keyCode === 46) {\n  //     // console.log(keyCode, key);\n  //     erase();\n  //   }\n  //   if (keyCode === 111 || keyCode === 55) {\n  //     console.log(numberList, key);\n  //     addOperator('/');\n  //   }\n  //   if (keyCode === 51 || keyCode === 106) {\n  //     // console.log(keyCode, key);\n  //     addOperator('路');\n  //   }\n  //   if (keyCode === 107 || keyCode === 187) {\n  //     // console.log(keyCode, key);\n  //     addOperator('+');\n  //   }\n  //   if (keyCode === 109 || keyCode === 189) {\n  //     // console.log(keyCode, key);\n  //     addOperator('-');\n  //   }\n  //   if (keyCode === 49 || keyCode === 97) {\n  //     // console.log(keyCode, key);\n  //     addNumber(1);\n  //   }\n  //   if (keyCode === 50 || keyCode === 98) {\n  //     // console.log(keyCode, key);\n  //     addNumber(2);\n  //   }\n  //   if (keyCode === 51 || keyCode === 99) {\n  //     // console.log(keyCode, key);\n  //     addNumber(3);\n  //   }\n  //   if (keyCode === 52 || keyCode === 100) {\n  //     // console.log(keyCode, key);\n  //     addNumber(4);\n  //   }\n  //   if (keyCode === 53 || keyCode === 101) {\n  //     // console.log(keyCode, key);\n  //     addNumber(5);\n  //   }\n  //   if (keyCode === 54 || keyCode === 102) {\n  //     // console.log(keyCode, key);\n  //     addNumber(6);\n  //   }\n  //   if (keyCode === 55 || keyCode === 103) {\n  //     // console.log(keyCode, key);\n  //     addNumber(7);\n  //   }\n  //   if (keyCode === 56 || keyCode === 104) {\n  //     // console.log(keyCode, key);\n  //     addNumber(8);\n  //   }\n  //   if (keyCode === 57 || keyCode === 105) {\n  //     // console.log(keyCode, key);\n  //     addNumber(9);\n  //   }\n  //   if (keyCode === 48 || keyCode === 96) {\n  //     // console.log(keyCode, key);\n  //     addNumber(0);\n  //   }\n  //   if (keyCode === 190 || keyCode === 110) {\n  //     // console.log(keyCode, key);\n  //     addNumber('.');\n  //   }\n  //   if (keyCode === 48 || keyCode === 13) {\n  //     // console.log(keyCode, key);\n  //     startCalculation();\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   window.addEventListener('keydown', handleUserKeyPress);\n\n  //   return () => {\n  //     window.removeEventListener('keydown', handleUserKeyPress);\n  //   }\n  // }, []);\n\n\n  useEffect(() => {\n    console.log('number', number);\n    if(number.length>0) {\n      setItem(number);\n    }\n  }, [number])\n\n  useEffect(() => {\n    console.log('numberList', numberList);\n  }, [numberList])\n\n  useEffect(() => {\n    console.log('operatorList', operatorList);\n  }, [operatorList])\n  \n  useEffect(() => {\n    if(result) {\n      calculate();\n    }\n    console.log(result)\n  }, [result])\n\n  const multiply = (num1, num2) => {\n    return num1*num2\n  }\n  const divide = (num1, num2) => {\n    return num1/num2\n  }\n  const sum = (num1, num2) => {\n    return num1+num2\n  }\n  const substract = (num1, num2) => {\n    return num1-num2\n  }\n\n  const erase = () => {\n    setNumber([]);\n    setOperatorList([]);\n    setNumberList([]);\n    setResult(false);\n    setDisplay([]);\n    setItem(0);\n  };\n\n  const addNumber = (el) => {\n    // if el == '路' && number.includes '路' --> do nothing \n    // else : operate\n    if(el==='.' && number.includes('.')) {\n      console.log('not possible')\n    }\n    else {\n      if(!display.includes('=')) {\n        setNumber((prevState) => [...prevState, el]);\n        setDisplay((prevState) => [...prevState, el]);\n      }\n      if(display.includes('=')) {\n        // console.log('numberList', numberList, 'number', number, 'display', display, 'operatorlist', operatorList);\n        setDisplay([el]);\n        setNumber((prevState) => [...prevState, el]);\n        setNumberList([]);\n      }\n    }\n  };\n\n  const addOperator = (op) => {\n    setDisplay((prevState) => [...prevState, op]);\n    // if number is empty -> we are changing the operator\n    if (number.length === 0) {\n      operatorList.pop();\n      // update with operator introduced\n      setOperatorList((prevState) => [...prevState, op]);\n    }\n    // if number is not empty\n    if(number.length>0) {\n      // add + / - or 路 to operatorList\n      setOperatorList((prevState) => [...prevState, op]);\n      // add number to numberList\n      setNumberList(prevState=>[...prevState, Number(number.join(''))]);\n      // setNumber to empty array\n      setNumber([]);\n    }\n    // if we are operating after calculation again --> erase first calculation \n    if(display.includes('=')) {\n      while(display.length>1){\n        display.shift();\n      }\n    }\n    setItem(op);\n  };\n\n  // when click on = --> update NumberList and setNumber to 0\n  const startCalculation = () => {\n    setNumber([]);\n    setResult(true);\n    setNumberList(prevState=>[...prevState, Number(number.join(''))]);\n  }\n  // once we have the numberList updated --> calculate\n  const calculate = () => {\n    setResult(false);\n    setDisplay((prevState) => [...prevState, '=']);\n    console.log('calculating');\n    // multiply and divide all the correspondent elements of NumberList by order\n    while(operatorList.includes('路') || operatorList.includes('/')) {\n      if(operatorList.includes('路') && operatorList.includes('/')) {\n        if(operatorList.indexOf('路')<operatorList.indexOf('/')){\n          // multiply\n          console.log('multiplying');\n          let index = operatorList.indexOf('路');\n          let calculation = multiply(numberList[index], numberList[index+1]);\n          operatorList.splice(index, 1);\n          numberList.splice(index, 2, calculation);\n        }\n        else {\n          // divide\n          console.log('dividing');\n          let index = operatorList.indexOf('/');\n          let calculation = divide(numberList[index], numberList[index+1]);\n          operatorList.splice(index, 1);\n          numberList.splice(index, 2, calculation);\n        }\n      }\n      else if(operatorList.includes('路')) {\n        console.log('multiplying');\n        let index = operatorList.indexOf('路');\n        let calculation = multiply(numberList[index], numberList[index+1]);\n        operatorList.splice(index, 1);\n        numberList.splice(index, 2, calculation);\n      }\n      else {\n        console.log('dividing');\n        let index = operatorList.indexOf('/');\n        let calculation = divide(numberList[index], numberList[index+1]);\n        operatorList.splice(index, 1);\n        numberList.splice(index, 2, calculation);\n      }\n    }\n    console.log('numberlist', numberList, 'operatorlist', operatorList.length);\n    // sum and substract all the correspondent elements of NumberList by order\n    while(operatorList.length>0) {\n      if(operatorList.includes('+') && operatorList.includes('-')) {\n        if(operatorList.indexOf('+')<operatorList.indexOf('-')){\n          // sum\n          console.log('summing');\n          let index = operatorList.indexOf('+');\n          let calculation = sum(numberList[index], numberList[index+1]);\n          operatorList.splice(index, 1);\n          numberList.splice(index, 2, calculation);\n        }\n        else {\n          // substract\n          console.log('substracting');\n          let index = operatorList.indexOf('-');\n          let calculation = substract(numberList[index], numberList[index+1]);\n          operatorList.splice(index, 1);\n          numberList.splice(index, 2, calculation);\n          console.log(calculation)\n        }\n      }\n      else if(operatorList.includes('+')) {\n        \n        let index = operatorList.indexOf('+');\n        \n        let calculation = sum(numberList[index], numberList[index+1]);\n         operatorList.splice(index, 1);\n        numberList.splice(index, 2, calculation);\n        console.log('summing', numberList, operatorList.length);\n      }\n      else {\n        console.log('substracting');\n        let index = operatorList.indexOf('-');\n        let calculation = substract(numberList[index], numberList[index+1]);\n        operatorList.splice(index, 1);\n        numberList.splice(index, 2, calculation);\n      }\n    }\n    if(operatorList.length===0){\n      setDisplay((prevState) => [...prevState, numberList]);\n      setItem(numberList);\n    }\n  }\n  \n\n  return (\n    <div className=\"App\">\n      <div className='calculator'>\n        <div className='result'>\n          <span className='operation'>{display}</span>\n          <span className='display'>{item}</span>\n        </div>\n        <div className='button-items'>\n          <button onClick={erase} className='ac'>AC</button>\n          <button onClick={()=>addOperator('/')} className='o b1'>/</button>\n          <button onClick={()=>addOperator('路')} className='o b2'>X</button>\n          <button onClick={()=>addNumber(7)} className='n b3'>7</button>\n          <button onClick={()=>addNumber(8)} className='n b4'>8</button>\n          <button onClick={()=>addNumber(9)} className='n b5'>9</button>\n          <button onClick={()=>addOperator('-')} className='o b6'>-</button>\n          <button onClick={()=>addNumber(4)} className='n b7'>4</button>\n          <button onClick={()=>addNumber(5)} className='n b8'>5</button>\n          <button onClick={()=>addNumber(6)} className='n b9'>6</button>\n          <button onClick={()=>addOperator('+')} className='o b10'>+</button>\n          <button onClick={()=>addNumber(1)} className='n b11'>1</button>\n          <button onClick={()=>addNumber(2)} className='n b12'>2</button>\n          <button onClick={()=>addNumber(3)} className='n b13'>3</button>\n          <button onClick={startCalculation} className='eq'>=</button>\n          <button onClick={()=>addNumber(0)} className='n b15'>0</button>\n          <button onClick={()=>addNumber('.')} className='p b16'>.</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}